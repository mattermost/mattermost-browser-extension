[{"/Users/nlecam/Developpement/floss/mattermost/mattermost-chrome-extension/dist/bundle.js":"1","/Users/nlecam/Developpement/floss/mattermost/mattermost-chrome-extension/src/app/index.js":"2","/Users/nlecam/Developpement/floss/mattermost/mattermost-chrome-extension/src/app/views/App.js":"3","/Users/nlecam/Developpement/floss/mattermost/mattermost-chrome-extension/webpack.config.js":"4"},{"size":298535,"mtime":1665450096776,"results":"5","hashOfConfig":"6"},{"size":193,"mtime":1665830420965,"results":"7","hashOfConfig":"8"},{"size":4537,"mtime":1665830746654,"results":"9","hashOfConfig":"8"},{"size":1383,"mtime":1665829486508,"results":"10","hashOfConfig":"8"},{"filePath":"11","messages":"12","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"xr90vb",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2tiw4l",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nlecam/Developpement/floss/mattermost/mattermost-chrome-extension/dist/bundle.js",["19"],"/Users/nlecam/Developpement/floss/mattermost/mattermost-chrome-extension/src/app/index.js",[],"/Users/nlecam/Developpement/floss/mattermost/mattermost-chrome-extension/src/app/views/App.js",["20","21"],"/Users/nlecam/Developpement/floss/mattermost/mattermost-chrome-extension/webpack.config.js",[],{"ruleId":null,"fatal":true,"severity":2,"message":"22"},{"ruleId":"23","severity":1,"message":"24","line":36,"column":15,"nodeType":"25","endLine":39,"endColumn":6},{"ruleId":"23","severity":1,"message":"26","line":39,"column":8,"nodeType":"27","endLine":39,"endColumn":10,"suggestions":"28"},"Parsing error: Unknown option: .cacheDirectory. Check out https://babeljs.io/docs/en/babel-core/#options for more information about options.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'loadToken'. Either include it or remove the dependency array.","ArrayExpression",["29"],{"desc":"30","fix":"31"},"Update the dependencies array to be: [loadToken]",{"range":"32","text":"33"},[1281,1283],"[loadToken]"]